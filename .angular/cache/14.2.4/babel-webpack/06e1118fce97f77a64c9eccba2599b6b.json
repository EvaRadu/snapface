{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/face-snaps.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction NewFaceSnapComponent_div_24_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const faceSnap_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Photo prise \\u00E0 \", faceSnap_r1.location, \"\");\n  }\n}\n\nfunction NewFaceSnapComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"img\", 15);\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, NewFaceSnapComponent_div_24_p_10_Template, 2, 1, \"p\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const faceSnap_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, faceSnap_r1.title));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Mis en ligne \", i0.ɵɵpipeBind2(6, 8, faceSnap_r1.createdDate, \"\\u00E0 HH:mm, le d MMMM yyyy\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", faceSnap_r1.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", faceSnap_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(faceSnap_r1.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", faceSnap_r1.location);\n  }\n}\n\nexport class NewFaceSnapComponent {\n  constructor(formBuilder, faceSnapsService, router) {\n    this.formBuilder = formBuilder;\n    this.faceSnapsService = faceSnapsService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.snapForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      imageUrl: ['', [Validators.required, Validators.pattern(this.urlRegex)]],\n      location: ['']\n    }, {\n      updateOn: 'blur'\n    });\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(map(formValue => ({ ...formValue,\n      createdDate: new Date(),\n      snaps: 0,\n      id: 0\n    })));\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n  }\n\n  onSubmitForm() {\n    this.faceSnapsService.addFaceSnap(this.snapForm.value);\n  }\n\n}\n\nNewFaceSnapComponent.ɵfac = function NewFaceSnapComponent_Factory(t) {\n  return new (t || NewFaceSnapComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaceSnapsService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nNewFaceSnapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewFaceSnapComponent,\n  selectors: [[\"app-new-face-snap\"]],\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"form-card\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\", \"rows\", \"4\"], [\"for\", \"imageUrl\"], [\"id\", \"imageUrl\", \"type\", \"text\", \"formControlName\", \"imageUrl\"], [\"for\", \"location\"], [\"id\", \"location\", \"type\", \"text\", \"formControlName\", \"location\"], [1, \"action-buttons\"], [\"type\", \"submit\", 3, \"disabled\", \"click\"], [\"class\", \"face-snap-card\", 4, \"ngIf\"], [1, \"face-snap-card\"], [3, \"src\", \"alt\"], [4, \"ngIf\"]],\n  template: function NewFaceSnapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"NOUVEAU FACESNAP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Titre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"textarea\", 6);\n      i0.ɵɵtext(12, \"            \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"URL de l'image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Lieu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function NewFaceSnapComponent_Template_button_click_22_listener() {\n        return ctx.onSubmitForm();\n      });\n      i0.ɵɵtext(23, \"Enregistrer\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(24, NewFaceSnapComponent_div_24_Template, 11, 11, \"div\", 13);\n      i0.ɵɵpipe(25, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.snapForm);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"disabled\", ctx.snapForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(25, 3, ctx.faceSnapPreview$));\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe, i4.UpperCasePipe, i4.DatePipe],\n  styles: [\".form-card[_ngcontent-%COMP%], .face-snap-card[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  width: 50%;\\n  margin: 20px auto;\\n  padding: 10px 30px;\\n  box-shadow: lightgray 4px 4px 20px;\\n}\\n\\n.face-snap-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.face-snap-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n\\n.face-snap-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-weight: 300;\\n  font-size: 16px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin: 10px auto;\\n  width: 80%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\ninput[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 20px auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ldy1mYWNlLXNuYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0NBQUE7QUFDSjs7QUFHSTtFQUNFLFdBQUE7QUFBTjs7QUFFSTtFQUNFLGdCQUFBO0FBQU47O0FBRUk7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFBTjs7QUFJRTtFQUNFLGlCQUFBO0VBQ0EsVUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0FBREo7O0FBSUU7RUFDRSxVQUFBO0FBREo7O0FBSUU7RUFDRSxXQUFBO0FBREo7O0FBSUU7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QUFESiIsImZpbGUiOiJuZXctZmFjZS1zbmFwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY2FyZCwgLmZhY2Utc25hcC1jYXJkIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4IDMwcHg7XHJcbiAgICBib3gtc2hhZG93OiBsaWdodGdyYXkgNHB4IDRweCAyMHB4O1xyXG4gIH1cclxuXHJcbiAgLmZhY2Utc25hcC1jYXJkIHtcclxuICAgIGltZyB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gICAgaDIge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgcCB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0LCB0ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gIH1cclxuICBcclxuICAuYWN0aW9uLWJ1dHRvbnMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;;;;;;;ICwBIC;IAA6BA;IAAqCA;;;;;IAArCA;IAAAA;;;;;;IALjCA,gCAAyE,CAAzE,EAAyE,IAAzE;IACQA;;IAAgCA;IACpCA;IAAGA;;IAAyEA;IAC5EA;IACAA;IAAGA;IAA0BA;IAC7BA;IACJA;;;;;IALQA;IAAAA;IACDA;IAAAA;IACEA;IAAAA,6DAAyB,KAAzB,EAAyBC,iBAAzB;IACFD;IAAAA;IACCA;IAAAA;;;;ADfR,OAAM,MAAOE,oBAAP,CAA2B;EAM/BC,YAAoBC,WAApB,EACoBC,gBADpB,EAEoBC,MAFpB,EAEkC;IAFd;IACA;IACA;EAAmB;;EAEvCC,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;MACrCC,KAAK,EAAE,CAAC,EAAD,EAAK,CAACX,UAAU,CAACY,QAAZ,CAAL,CAD8B;MAErCC,WAAW,EAAE,CAAC,EAAD,EAAK,CAACb,UAAU,CAACY,QAAZ,CAAL,CAFwB;MAGrCE,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACd,UAAU,CAACY,QAAZ,EAAsBZ,UAAU,CAACe,OAAX,CAAmB,KAAKC,QAAxB,CAAtB,CAAL,CAH2B;MAIrCC,QAAQ,EAAE,CAAC,EAAD;IAJ2B,CAAvB,EAKb;MACDC,QAAQ,EAAE;IADT,CALa,CAAhB;IASA,KAAKC,gBAAL,GAAwB,KAAKV,QAAL,CAAcW,YAAd,CAA2BC,IAA3B,CACtBtB,GAAG,CAACuB,SAAS,KAAK,EACd,GAAGA,SADW;MAEdC,WAAW,EAAE,IAAIC,IAAJ,EAFC;MAGdC,KAAK,EAAE,CAHO;MAIdC,EAAE,EAAE;IAJU,CAAL,CAAV,CADmB,CAAxB;IASA,KAAKV,QAAL,GAAgB,gGAAhB;EACD;;EAEDW,YAAY;IACV,KAAKrB,gBAAL,CAAsBsB,WAAtB,CAAkC,KAAKnB,QAAL,CAAcoB,KAAhD;EAED;;AAnC8B;;;mBAApB1B,sBAAoBF;AAAA;;;QAApBE;EAAoB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfjCjC,+BAAuB,CAAvB,EAAuB,IAAvB;MACQA;MAAgBA;MACpBA,gCAA6B,CAA7B,EAA6B,KAA7B,EAA6B,CAA7B,EAA6B,CAA7B,EAA6B,OAA7B,EAA6B,CAA7B;MAE2BA;MAAKA;MACxBA;MACJA;MACAA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC6BA;MAAWA;MACpCA;MACAA;MAAAA;MAEJA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC0BA;MAAcA;MACpCA;MACJA;MACAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC0BA;MAAIA;MAC1BA;MACJA;MACAA,iCAA4B,EAA5B,EAA4B,QAA5B,EAA4B,EAA5B;MAC0BA;QAAA,OAASkC,kBAAT;MAAuB,CAAvB;MAAuDlC;MAAWA;MAIpGA;;;;;MAvBUA;MAAAA;MAmBiDA;MAAAA;MAI9BA;MAAAA","names":["map","Validators","i0","faceSnap_r1","NewFaceSnapComponent","constructor","formBuilder","faceSnapsService","router","ngOnInit","snapForm","group","title","required","description","imageUrl","pattern","urlRegex","location","updateOn","faceSnapPreview$","valueChanges","pipe","formValue","createdDate","Date","snaps","id","onSubmitForm","addFaceSnap","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\eva\\Documents\\AngularProjetcs\\snapface\\src\\app\\new-face-snap\\new-face-snap.component.ts","C:\\Users\\eva\\Documents\\AngularProjetcs\\snapface\\src\\app\\new-face-snap\\new-face-snap.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { FaceSnap } from '../models/face-snap.models';\r\nimport { Observable } from 'rxjs'; \r\nimport { map } from 'rxjs/operators';\r\nimport { Validators } from '@angular/forms';\r\nimport { FaceSnapsService } from '../services/face-snaps.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-new-face-snap',\r\n  templateUrl: './new-face-snap.component.html',\r\n  styleUrls: ['./new-face-snap.component.scss']\r\n})\r\nexport class NewFaceSnapComponent implements OnInit {\r\n\r\n  snapForm!: FormGroup;\r\n  faceSnapPreview$!: Observable<FaceSnap>;\r\n  urlRegex!: RegExp;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private faceSnapsService: FaceSnapsService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.snapForm = this.formBuilder.group({\r\n      title: ['', [Validators.required]],\r\n      description: ['', [Validators.required]],\r\n      imageUrl: ['', [Validators.required, Validators.pattern(this.urlRegex)]],\r\n      location: ['']\r\n    }, {\r\n      updateOn: 'blur'\r\n    });\r\n\r\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(\r\n      map(formValue => ({\r\n          ...formValue,\r\n          createdDate: new Date(),\r\n          snaps: 0,\r\n          id: 0\r\n      }))\r\n  );\r\n\r\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\r\n  }\r\n\r\n  onSubmitForm() {\r\n    this.faceSnapsService.addFaceSnap(this.snapForm.value);\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"form-card\">\r\n    <h2>NOUVEAU FACESNAP</h2>\r\n    <form [formGroup]=\"snapForm\">   \r\n        <div class=\"form-group\">\r\n            <label for=\"title\">Titre</label>\r\n            <input id=\"title\" type=\"text\" formControlName=\"title\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea id=\"description\" type=\"text\" formControlName=\"description\" rows=\"4\">\r\n            </textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"imageUrl\">URL de l'image</label>\r\n            <input id=\"imageUrl\" type=\"text\" formControlName=\"imageUrl\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"location\">Lieu</label>\r\n            <input id=\"location\" type=\"text\" formControlName=\"location\">\r\n        </div>\r\n        <div class=\"action-buttons\">\r\n            <button type=\"submit\" (click)=\"onSubmitForm()\" [disabled]=\"snapForm.invalid\">Enregistrer</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"face-snap-card\" *ngIf=\"faceSnapPreview$ | async as faceSnap\">\r\n    <h2>{{ faceSnap.title | uppercase }}</h2>\r\n    <p>Mis en ligne {{ faceSnap.createdDate | date: 'à HH:mm, le d MMMM yyyy' }}</p>\r\n    <img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\">\r\n    <p>{{ faceSnap.description }}</p>\r\n    <p *ngIf=\"faceSnap.location\">Photo prise à {{ faceSnap.location }}</p>\r\n</div>"]},"metadata":{},"sourceType":"module"}