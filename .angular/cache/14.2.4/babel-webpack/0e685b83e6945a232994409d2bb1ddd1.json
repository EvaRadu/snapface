{"ast":null,"code":"import { interval } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { mergeMap, delay, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class AppComponent {\n  constructor() {\n    this.redTrainsCalled = 0;\n    this.yellowTrainsCalled = 0;\n  }\n\n  ngOnInit() {\n    interval(500).pipe(take(10), map(value => value % 2 === 0 ? 'rouge' : 'jaune'), tap(color => console.log(`La lumière s'allume en %c${color}`, `color: ${this.translateColor(color)}`)), mergeMap(color => this.getTrainObservable$(color)), tap(train => console.log(`Train %c${train.color} ${train.trainIndex} arrivé !`, `font-weight: bold; color: ${this.translateColor(train.color)}`))).subscribe();\n  }\n\n  getTrainObservable$(color) {\n    const isRedTrain = color === 'rouge';\n    isRedTrain ? this.redTrainsCalled++ : this.yellowTrainsCalled++;\n    const trainIndex = isRedTrain ? this.redTrainsCalled : this.yellowTrainsCalled;\n    console.log(`Train %c${color} ${trainIndex} appelé !`, `text-decoration: underline; color: ${this.translateColor(color)}`);\n    return of({\n      color,\n      trainIndex\n    }).pipe(delay(isRedTrain ? 5000 : 6000));\n  }\n\n  translateColor(color) {\n    return color === 'rouge' ? 'red' : 'yellow';\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 3,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx.interval$));\n    }\n  },\n  dependencies: [i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAqC,MAArC;AACA,SAASC,GAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAAoBC,QAApB,EAA8BC,KAA9B,EAAiEC,IAAjE,QAAkF,gBAAlF;;;AAQA,OAAM,MAAOC,YAAP,CAAmB;EANzBC;IAQE,uBAAkB,CAAlB;IACA,0BAAqB,CAArB;EAyBD;;EAvBCC,QAAQ;IACNR,QAAQ,CAAC,GAAD,CAAR,CAAcS,IAAd,CACEJ,IAAI,CAAC,EAAD,CADN,EAEEJ,GAAG,CAACS,KAAK,IAAIA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,OAAlB,GAA4B,OAAtC,CAFL,EAGER,GAAG,CAACS,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,4BAA4BF,KAAK,EAA7C,EAAiD,UAAU,KAAKG,cAAL,CAAoBH,KAApB,CAA0B,EAArF,CAAV,CAHL,EAIER,QAAQ,CAACQ,KAAK,IAAI,KAAKI,mBAAL,CAAyBJ,KAAzB,CAAV,CAJV,EAKET,GAAG,CAACc,KAAK,IAAIJ,OAAO,CAACC,GAAR,CAAY,WAAWG,KAAK,CAACL,KAAK,IAAIK,KAAK,CAACC,UAAU,WAAtD,EAAmE,6BAA6B,KAAKH,cAAL,CAAoBE,KAAK,CAACL,KAA1B,CAAgC,EAAhI,CAAV,CALL,EAMEO,SANF;EAOD;;EAEDH,mBAAmB,CAACJ,KAAD,EAAyB;IAC1C,MAAMQ,UAAU,GAAGR,KAAK,KAAK,OAA7B;IACAQ,UAAU,GAAG,KAAKC,eAAL,EAAH,GAA4B,KAAKC,kBAAL,EAAtC;IACA,MAAMJ,UAAU,GAAGE,UAAU,GAAG,KAAKC,eAAR,GAA0B,KAAKC,kBAA5D;IACAT,OAAO,CAACC,GAAR,CAAY,WAAWF,KAAK,IAAIM,UAAU,WAA1C,EAAuD,sCAAsC,KAAKH,cAAL,CAAoBH,KAApB,CAA0B,EAAvH;IACA,OAAOW,EAAE,CAAC;MAAEX,KAAF;MAASM;IAAT,CAAD,CAAF,CAA0BR,IAA1B,CACLL,KAAK,CAACe,UAAU,GAAG,IAAH,GAAU,IAArB,CADA,CAAP;EAGD;;EAEDL,cAAc,CAACH,KAAD,EAAyB;IACrC,OAAOA,KAAK,KAAK,OAAV,GAAoB,KAApB,GAA4B,QAAnC;EACD;;AA3BsB;;;mBAAZL;AAAY;;;QAAZA;EAAYiB;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC;MAAIA;;MAAuBA;;;;MAAvBA;MAAAA","names":["interval","map","tap","mergeMap","delay","take","AppComponent","constructor","ngOnInit","pipe","value","color","console","log","translateColor","getTrainObservable$","train","trainIndex","subscribe","isRedTrain","redTrainsCalled","yellowTrainsCalled","of","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\eva\\Documents\\AngularProjetcs\\snapface\\src\\app\\app.component.ts","C:\\Users\\eva\\Documents\\AngularProjetcs\\snapface\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { interval, Observable } from 'rxjs';\r\nimport { map, filter, tap } from 'rxjs/operators';\r\nimport { concatMap, mergeMap, delay, exhaustMap, map, switchMap, take, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  redTrainsCalled = 0;\r\n  yellowTrainsCalled = 0;\r\n\r\n  ngOnInit() {\r\n    interval(500).pipe(\r\n      take(10),\r\n      map(value => value % 2 === 0 ? 'rouge' : 'jaune'),\r\n      tap(color => console.log(`La lumière s'allume en %c${color}`, `color: ${this.translateColor(color)}`)),\r\n      mergeMap(color => this.getTrainObservable$(color)),\r\n      tap(train => console.log(`Train %c${train.color} ${train.trainIndex} arrivé !`, `font-weight: bold; color: ${this.translateColor(train.color)}`))\r\n    ).subscribe();\r\n  }\r\n\r\n  getTrainObservable$(color: 'rouge' | 'jaune') {\r\n    const isRedTrain = color === 'rouge';\r\n    isRedTrain ? this.redTrainsCalled++ : this.yellowTrainsCalled++;\r\n    const trainIndex = isRedTrain ? this.redTrainsCalled : this.yellowTrainsCalled;\r\n    console.log(`Train %c${color} ${trainIndex} appelé !`, `text-decoration: underline; color: ${this.translateColor(color)}`);\r\n    return of({ color, trainIndex }).pipe(\r\n      delay(isRedTrain ? 5000 : 6000)\r\n    );\r\n  }\r\n\r\n  translateColor(color: 'rouge' | 'jaune') {\r\n    return color === 'rouge' ? 'red' : 'yellow';\r\n  }\r\n}\r\n\r\n","<!--<app-header></app-header>-->\r\n<!--<router-outlet></router-outlet>-->\r\n<h1>{{ interval$ | async }}</h1>"]},"metadata":{},"sourceType":"module"}